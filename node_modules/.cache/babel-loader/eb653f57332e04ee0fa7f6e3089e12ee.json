{"ast":null,"code":"var _jsxFileName = \"/Users/dorah/Desktop/W04D02/todo/src/Components/Todo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import \"./style.css\";\n\nimport TodoItem from \"../TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  // const [id , setid] = useState(1);\n  // const [name , setname] = useState([\"sleep\" , \"\"]);\n  const [todoarray, settodoarray] = useState([{\n    id: 1,\n    name: \"sleep\"\n  }, {\n    id: 2,\n    name: \"walk\"\n  }]); // let state = {\n  //     todoarray: [\n  //       { Id: 1, name: \"sleep\" },\n  //       { Id: 2, name: \"walk\" },\n  //     ],\n  //   };\n\n  const createNew = e => {\n    e.preventDefault();\n    let obj = {\n      id: todoarray.length + 1,\n      name: e.target.inside.value\n    };\n    settodoarray([...todoarray, obj]);\n    e.target.inside.value = \"\";\n  }; // useEffect(() =>{\n  //   settodoarray\n  // })\n\n\n  const deletitem = id => {\n    // {console.log(Id)}\n    settodoarray([...todoarray.filter(item => item.id !== id)]);\n  };\n\n  const editeitem = id => {\n    const neww = prompt(\"enter the new todos\", \"newlist\");\n    ;\n    console.log(neww); // const newarray = todoarray.splice(()=>{\n    // })\n    // settodoarray([...todoarray.splice((item) => {\n    //  if( item.id == id){\n    //  }\n    //  return \n    // }) ]);\n    // settodoarray(id.name.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createNew,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todoarray.map((item, i) => /*#__PURE__*/_jsxDEV(TodoItem, {\n          todos: item,\n          editeitem: editeitem,\n          deletitem: deletitem\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this) //This  {} is passed as a prop\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"inside\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Todo, \"ThLa6Sg/eKKVPZbLBZfFVw46SXA=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/dorah/Desktop/W04D02/todo/src/Components/Todo/index.js"],"names":["React","useState","useEffect","TodoItem","Todo","todoarray","settodoarray","id","name","createNew","e","preventDefault","obj","length","target","inside","value","deletitem","filter","item","editeitem","neww","prompt","console","log","map","i"],"mappings":";;;AAEA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,aAArB;;;;AAEA,MAAMC,IAAI,GAAE,MAAK;AAAA;;AAEf;AACA;AACA,QAAM,CAACC,SAAD,EAAaC,YAAb,IAA4BL,QAAQ,CAAE,CAC1C;AAAEM,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAD0C,EAE1C;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAF0C,CAAF,CAA1C,CAJe,CASf;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACJ,QAAIC,GAAG,GAAG;AACRL,MAAAA,EAAE,EAAEF,SAAS,CAACQ,MAAV,GAAmB,CADf;AAERL,MAAAA,IAAI,EAAEE,CAAC,CAACI,MAAF,CAASC,MAAT,CAAgBC;AAFd,KAAV;AAIAV,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAgBO,GAAhB,CAAD,CAAZ;AAGMF,IAAAA,CAAC,CAACI,MAAF,CAASC,MAAT,CAAgBC,KAAhB,GAAwB,EAAxB;AACH,GAVD,CAjBe,CA6Bf;AACA;AACA;;;AAGA,QAAMC,SAAS,GAAEV,EAAD,IAAM;AACpB;AACAD,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAS,CAACa,MAAV,CAAkBC,IAAD,IAAWA,IAAI,CAACZ,EAAL,KAAYA,EAAxC,CAAJ,CAAD,CAAZ;AACD,GAHD;;AAKA,QAAMa,SAAS,GAAEb,EAAD,IAAM;AACpB,UAAMc,IAAI,GAAEC,MAAM,CAAC,qBAAD,EAAwB,SAAxB,CAAlB;AAAqD;AACrDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAFoB,CAIpB;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACD,GAhBD;;AAkBE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEZ,SAAhB;AAAA,8BACE;AAAA,kBACGJ,SAAS,CAACoB,GAAV,CAAc,CAACN,IAAD,EAAOO,CAAP,kBACX,QAAC,QAAD;AAAW,UAAA,KAAK,EAAEP,IAAlB;AAAiC,UAAA,SAAS,EAAEC,SAA5C;AAAwD,UAAA,SAAS,EAAEH;AAAnE,WAA8BS,CAA9B;AAAA;AAAA;AAAA;AAAA,gBADW,CACuE;AADrF;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAgBS,CAzEb;;GAAMtB,I;;KAAAA,I;AA0EN,eAAeA,IAAf","sourcesContent":["\n\nimport React,{useState, useEffect} from \"react\";\n// import \"./style.css\";\nimport TodoItem from \"../TodoItem\";\n\nconst Todo =()=> {\n  \n  // const [id , setid] = useState(1);\n  // const [name , setname] = useState([\"sleep\" , \"\"]);\n  const [todoarray , settodoarray]= useState ([\n    { id: 1, name: \"sleep\" },\n    { id: 2, name: \"walk\" },\n  ])\n\n  // let state = {\n  //     todoarray: [\n  //       { Id: 1, name: \"sleep\" },\n  //       { Id: 2, name: \"walk\" },\n  //     ],\n  //   };\n  \n\n  const createNew = (e) => {\n    e.preventDefault(); \nlet obj = {\n  id: todoarray.length + 1,\n  name: e.target.inside.value,\n}\nsettodoarray([...todoarray , obj])\n\n\n      e.target.inside.value = \"\"; \n  }\n\n  // useEffect(() =>{\n  //   settodoarray\n  // })\n  \n\n  const deletitem=(id)=>{\n    // {console.log(Id)}\n    settodoarray([...todoarray.filter((item) =>  item.id !== id) ]);\n  }\n\n  const editeitem=(id)=>{\n    const neww= prompt(\"enter the new todos\" ,\"newlist\");; \n    console.log(neww);\n\n    // const newarray = todoarray.splice(()=>{\n\n    // })\n\n    \n    // settodoarray([...todoarray.splice((item) => {\n    //  if( item.id == id){\n       \n    //  }\n    //  return \n    // }) ]);\n    // settodoarray(id.name.target.value);\n  }\n \n    return (\n      <>\n        <h1>To Do list</h1>\n        <form onSubmit={createNew}>\n          <ul>\n            {todoarray.map((item, i) => (\n                <TodoItem  todos={item}  key={i} editeitem={editeitem}  deletitem={deletitem}  /> //This  {} is passed as a prop\n              ) \n            )}\n          </ul>\n          <input type=\"text\" name=\"inside\" />\n          <button>add </button>\n        </form>\n      </>\n    );\n  \n            }\nexport default Todo;\n\n\n"]},"metadata":{},"sourceType":"module"}